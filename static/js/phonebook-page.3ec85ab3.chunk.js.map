{"version":3,"file":"static/js/phonebook-page.3ec85ab3.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { filteredContact } from \"../../redux/contacts/filtersSlice\";\nimport { TextField } from \"@mui/material\";\n\nconst css = {\n  containerDiv: [\"flex\", \"justify-center\", \"mt-4\"].join(\" \"),\n  filterForm: [\n    \"flex\",\n    \"justify-center\",\n    \"flex-col\",\n    \"border-2\",\n    \"p-8\",\n    \"bg-white\",\n    \"rounded-2xl\",\n    \"shadow-lg\",\n  ].join(\" \"),\n  textH3: [\"text-center\", \"mb-5\"].join(\" \"),\n  label: \"mb-5\",\n};\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    event.preventDefault();\n    const name = event.target.value;\n    dispatch(filteredContact(name));\n  };\n\n  return (\n    <div className={css.containerDiv}>\n      <form className={css.filterForm}>\n        <h3 className={css.textH3}>Find contacts by name</h3>\n        <label className={css.label}>\n          <TextField onChange={handleFilter} size=\"small\" label=\"Enter name\" />\n        </label>\n      </form>\n    </div>\n  );\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filters;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (filter.filter === \"\") {\n      return contacts;\n    } else {\n      const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.filter.toLowerCase())\n      );\n      return filteredContacts;\n    }\n  }\n);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\nimport { Button, TextField } from \"@mui/material\";\n\nconst css = {\n  containerDiv: [\"flex\", \"justify-center\", \"mt-5\"].join(\" \"),\n  contactForm: [\n    \"flex\",\n    \"flex-col\",\n    \"bg-white\",\n    \"border-2\",\n    \"p-8\",\n    \"rounded-2xl\",\n    \"shadow-lg\",\n  ].join(\" \"),\n  label: \"mb-5\",\n};\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map((contact) => contact.name);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return alert(`${contact.name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    event.target.reset();\n  };\n\n  return (\n    <div className={css.containerDiv}>\n      <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          <TextField\n            type=\"text\"\n            size=\"small\"\n            name=\"name\"\n            label=\"Name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          <TextField\n            type=\"tel\"\n            size=\"small\"\n            name=\"number\"\n            label=\"Number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListItem\":\"ContactsList_contactsListItem__DDy5j\",\"contactsName\":\"ContactsList_contactsName__aMNYv\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\nimport { Button } from \"@mui/material\";\nimport css from \"./ContactsList.module.css\";\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => dispatch(deleteContact(id));\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map((contact) => (\n        <li key={contact.id} className={css.contactsItem}>\n          <span className={css.contactsName}>\n            {contact.name}: {contact.number}\n          </span>\n          <Button type=\"submit\" onClick={() => handleDelete(contact.id)}>\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Filter } from \"../../components/Filter/Filter\";\nimport { ContactsForm } from \"../../components/ContactsForm/ContactsForm\";\nimport { ContactsList } from \"../../components/ContactsList/ContactsList\";\nimport { selectError, selectLoading } from \"../../redux/contacts/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nconst css = {\n  containerDiv: [\"flex\", \"mb-4\", \"gap-4\"].join(\" \"),\n  contactsDiv: [\"mt-6\"],\n};\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n\n  return (\n    <div className={css.containerDiv}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n      <div>\n        <ContactsForm />\n        <Filter />\n      </div>\n      <div className={css.contactsDiv}>\n        {isLoading ? <p>Loading contacts...</p> : <ContactsList />}\n        {isError && <p>Something went wrong. Try again later.</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["css","containerDiv","join","filterForm","textH3","label","Filter","dispatch","useDispatch","className","TextField","onChange","event","preventDefault","name","target","value","filteredContact","size","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","toLowerCase","includes","contactForm","ContactsForm","stateContactsNames","useSelector","map","onSubmit","elements","number","reset","alert","addContact","type","title","required","Button","variant","ContactsList","onClick","handleDelete","id","deleteContact","contactsDiv","isError"],"sourceRoot":""}